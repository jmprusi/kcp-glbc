
//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by kcp code-generator. DO NOT EDIT.

package v1

import (
	kcptesting "github.com/kcp-dev/client-go/third_party/k8s.io/client-go/testing"
	"github.com/kcp-dev/logicalcluster/v3"

	"k8s.io/client-go/rest"
	kcpkuadrantv1 "github.com/kuadrant/kcp-glbc/pkg/client/kuadrant/clientset/versioned/cluster/typed/kuadrant/v1"
	kuadrantv1 "github.com/kuadrant/kcp-glbc/pkg/client/kuadrant/clientset/versioned/typed/kuadrant/v1"
)

var _ kcpkuadrantv1.KuadrantV1ClusterInterface = (*KuadrantV1ClusterClient)(nil)

type KuadrantV1ClusterClient struct {
	*kcptesting.Fake 
}

func (c *KuadrantV1ClusterClient) Cluster(clusterPath logicalcluster.Path) kuadrantv1.KuadrantV1Interface {
	if clusterPath == logicalcluster.Wildcard {
		panic("A specific cluster must be provided when scoping, not the wildcard.")
	}
	return &KuadrantV1Client{Fake: c.Fake, ClusterPath: clusterPath}
}


func (c *KuadrantV1ClusterClient) DomainVerifications() kcpkuadrantv1.DomainVerificationClusterInterface {
	return &domainVerificationsClusterClient{Fake: c.Fake}
}

func (c *KuadrantV1ClusterClient) DNSRecords() kcpkuadrantv1.DNSRecordClusterInterface {
	return &dNSRecordsClusterClient{Fake: c.Fake}
}
var _ kuadrantv1.KuadrantV1Interface = (*KuadrantV1Client)(nil)

type KuadrantV1Client struct {
	*kcptesting.Fake
	ClusterPath logicalcluster.Path
}

func (c *KuadrantV1Client) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}


func (c *KuadrantV1Client) DomainVerifications() kuadrantv1.DomainVerificationInterface {
	return &domainVerificationsClient{Fake: c.Fake, ClusterPath: c.ClusterPath}
}

func (c *KuadrantV1Client) DNSRecords(namespace string) kuadrantv1.DNSRecordInterface {
	return &dNSRecordsClient{Fake: c.Fake, ClusterPath: c.ClusterPath, Namespace: namespace}
}
